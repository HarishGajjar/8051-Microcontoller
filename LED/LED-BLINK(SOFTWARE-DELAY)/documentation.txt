# AT89S52 Microcontroller - 1 Second LED Blink

This project demonstrates how to generate a 1-second delay using the AT89S52 microcontroller and control an LED connected to P2.0.

## Hardware Setup

1. Connect an LED to Pin P2.0 of the AT89S52 microcontroller. The cathode (shorter lead) should be connected to P2.0 and the anode (longer lead) should be connected to a current-limiting resistor and then to the VCC (5V) supply.

2. Ensure that the AT89S52 microcontroller is properly powered and connected.

## Code Explanation

The code provided uses the `delay` function to introduce a delay of approximately 1 second based on the specified oscillator frequency. The main loop turns on and off the LED connected to P2.0 in 1-second intervals.

### Functions

#### `void delay(unsigned int msec)`

This function introduces a delay in milliseconds. It consists of nested loops where the exact number of iterations determines the delay length. The inner loop iterates a value (115) that has been adjusted to match the 11.0592MHz oscillator frequency.

#### `void main()`

The `main` function initializes the LED pin as an output and enters an infinite loop. In each iteration of the loop, the LED is turned on for 1 second using the `delay` function, and then turned off for another 1 second using the same function.

## Usage

1. Compile the code using a suitable 8051 compiler (e.g., Keil, SDCC).

2. Program the AT89S52 microcontroller with the generated hex file.

3. Connect the hardware as described in the "Hardware Setup" section.

4. Power on the microcontroller.

The LED connected to P2.0 will blink on and off at 1-second intervals.

## Adjustments

- If the delay is not accurate, you may need to adjust the loop count in the `delay` function for your specific oscillator frequency. This adjustment may require some trial and error.

## Notes

- Achieving a precise 1-second delay can be challenging due to various factors, such as oscillator accuracy and microcontroller execution times.

- This code provides a close approximation to a 1-second delay, but small variations might occur.

---

Feel free to customize this README template according to your project's specific needs. Make sure to include information about your development environment, how to compile and program the code, and any additional details that could be helpful for users trying to recreate your project.
